<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd"> 

    <!-- Rule CreateDrl -->
	<bean id="CreateDrl" class="com.founder.fmdm.service.rule.CreateDrl" />
	
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<constructor-arg>
			<list>
				<!-- SSO配置 BEGIN -->
				<ref local="preAuthProvider" />
				<!-- SSO配置 END -->
				<ref local="daoAuthenticationProvider" />
				<!-- 
				<ref local="anonymousAuthenticationProvider" />
				<ref local="ldapAuthenticationProvider"/> 
				-->
			</list>
		</constructor-arg>
	</bean>
	<!-- SSO配置 BEGIN -->
	<bean id="preAuthenticatedProcessingFilter" class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
		<property name="exceptionIfHeaderMissing" value="false"/>
		<property name="principalRequestHeader" value="OAM_REMOTE_USER"/>
		<property name="authenticationManager" ref="authenticationManager"/>
	</bean>
	<bean id="preAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <property name="preAuthenticatedUserDetailsService" ref="userDetailsServiceWrapper" />
    </bean>
    
     <bean id="userDetailsServiceWrapper" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        <property name="userDetailsService" ref="userDetailsService"/>
     </bean>
	<!-- SSO配置 END -->
	<!--  
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<property name="key" value="guest" />
	</bean>
	-->

	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="hideUserNotFoundExceptions" value="false" />
		<property name="passwordEncoder" ref="md5PasswordEncoder" />
	</bean>

	<!-- <bean id="shaPasswordEncoder" class="org.springframework.security.authentication.encoding.LdapShaPasswordEncoder" /> -->

	  
	<bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	

	<!-- ============================================================================================ -->
	<!-- spring security userDetailsService -->
	<!-- ============================================================================================ -->
	<bean id="userDetailsService" class="com.founder.web.security.UserDetailsServiceImpl" />

	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/scripts/**/*" filters="none" />
			<sec:filter-chain pattern="/styles/**/*" filters="none" />
			<sec:filter-chain pattern="/images/**/*" filters="none" />
			<sec:filter-chain pattern="/**/favicon.ico" filters="none" />
			<sec:filter-chain pattern="/**/login.html" filters="none" />
			<sec:filter-chain pattern="/webservices/**/*" filters="none" />
		    <sec:filter-chain pattern="/**"
				filters="securityContextPersistenceFilterWithASCTrue,
					logoutFilter,
					preAuthenticatedProcessingFilter,
					formLoginFilter,
					sessionManagementFilter,
					exceptionTranslationFilter,
					filterSecurityInterceptor" />
			<!-- preAuthenticatedProcessingFilter为SSO预认证 -->
		</sec:filter-chain-map>
	</bean>
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg name="logoutSuccessUrl" value="/security/login.html" />
		<constructor-arg name="handlers">
			<array>
				<ref local="logoutHandler" />
			</array>
		</constructor-arg>
	</bean>

	<bean id="logoutHandler" class="com.founder.web.security.LogoutHandlerImpl">
	</bean>

	<bean id="anonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<property name="key" value="foobar" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

	<bean id="securityContextRepositoryWithASCTrue" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
		<property name="allowSessionCreation" value="true" />
	</bean>

	<bean id="securityContextPersistenceFilterWithASCTrue" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name="securityContextRepository" ref="securityContextRepositoryWithASCTrue" />
		<property name="forceEagerSessionCreation" value="true" />
	</bean>

	<bean id="formLoginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="simpleUrlAuthenticationSuccessHandler" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
	</bean>

	<bean name="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg name="securityContextRepository" ref="securityContextRepositoryWithASCTrue"/>
    </bean>
    
	<bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/security/login.html?status=error" />
		<!-- <property name="useForward" value="true" /> -->
	</bean>
	
	<bean id="simpleUrlAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
    	<property name="defaultTargetUrl" value="/"/> 
	</bean>

	<bean id="exceptionMappingAuthenticationFailureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" />

	<bean id="securityMetadataSource" class="com.founder.web.security.DatabaseFilterInvocationSecurityMetadataSource" />

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
					<property name="rolePrefix" value="ROLE_" />
				</bean>
				<bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" /> 
	</bean>

	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</bean>

	<!--  <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/security/login.html" />
	</bean>-->

	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/403.jsp" />
	</bean>
	
	<bean id="authenticationEntryPoint" class="com.founder.web.security.SessionTimeOutInterceptor">
		<property name="loginFormUrl" value="/security/login.html" />
	</bean>
	
</beans>
